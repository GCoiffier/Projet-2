   0  $accept : %entry% $end

   1  main : instrl EOL

   2  instrl : instr
   3         | instr instrl

   4  instr : IF instrl ELSE instrl IFEND
   5        | INT
   6        | ADD
   7        | MINUS
   8        | MULT
   9        | DIV
  10        | MOD
  11        | UMINUS
  12        | PRINT
  13        | AND
  14        | OR
  15        | EQUAL
  16        | NEQUAL
  17        | INFEQ
  18        | INF
  19        | SUPEQ
  20        | SUP
  21        | LET
  22        | ACCESS
  23        | ENDLET

  24  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (24)

	INT  shift 3
	LET  shift 4
	ACCESS  shift 5
	ENDLET  shift 6
	ADD  shift 7
	MINUS  shift 8
	MULT  shift 9
	DIV  shift 10
	MOD  shift 11
	UMINUS  shift 12
	PRINT  shift 13
	AND  shift 14
	OR  shift 15
	EQUAL  shift 16
	NEQUAL  shift 17
	SUP  shift 18
	SUPEQ  shift 19
	INFEQ  shift 20
	INF  shift 21
	IF  shift 22
	.  error

	main  goto 23
	instrl  goto 24
	instr  goto 25


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	instr : INT .  (5)

	.  reduce 5


state 4
	instr : LET .  (21)

	.  reduce 21


state 5
	instr : ACCESS .  (22)

	.  reduce 22


state 6
	instr : ENDLET .  (23)

	.  reduce 23


state 7
	instr : ADD .  (6)

	.  reduce 6


state 8
	instr : MINUS .  (7)

	.  reduce 7


state 9
	instr : MULT .  (8)

	.  reduce 8


state 10
	instr : DIV .  (9)

	.  reduce 9


state 11
	instr : MOD .  (10)

	.  reduce 10


state 12
	instr : UMINUS .  (11)

	.  reduce 11


state 13
	instr : PRINT .  (12)

	.  reduce 12


state 14
	instr : AND .  (13)

	.  reduce 13


state 15
	instr : OR .  (14)

	.  reduce 14


state 16
	instr : EQUAL .  (15)

	.  reduce 15


state 17
	instr : NEQUAL .  (16)

	.  reduce 16


state 18
	instr : SUP .  (20)

	.  reduce 20


state 19
	instr : SUPEQ .  (19)

	.  reduce 19


state 20
	instr : INFEQ .  (17)

	.  reduce 17


state 21
	instr : INF .  (18)

	.  reduce 18


state 22
	instr : IF . instrl ELSE instrl IFEND  (4)

	INT  shift 3
	LET  shift 4
	ACCESS  shift 5
	ENDLET  shift 6
	ADD  shift 7
	MINUS  shift 8
	MULT  shift 9
	DIV  shift 10
	MOD  shift 11
	UMINUS  shift 12
	PRINT  shift 13
	AND  shift 14
	OR  shift 15
	EQUAL  shift 16
	NEQUAL  shift 17
	SUP  shift 18
	SUPEQ  shift 19
	INFEQ  shift 20
	INF  shift 21
	IF  shift 22
	.  error

	instrl  goto 26
	instr  goto 25


state 23
	%entry% : '\001' main .  (24)

	.  reduce 24


state 24
	main : instrl . EOL  (1)

	EOL  shift 27
	.  error


state 25
	instrl : instr .  (2)
	instrl : instr . instrl  (3)

	INT  shift 3
	LET  shift 4
	ACCESS  shift 5
	ENDLET  shift 6
	ADD  shift 7
	MINUS  shift 8
	MULT  shift 9
	DIV  shift 10
	MOD  shift 11
	UMINUS  shift 12
	PRINT  shift 13
	AND  shift 14
	OR  shift 15
	EQUAL  shift 16
	NEQUAL  shift 17
	SUP  shift 18
	SUPEQ  shift 19
	INFEQ  shift 20
	INF  shift 21
	IF  shift 22
	ELSE  reduce 2
	IFEND  reduce 2
	EOL  reduce 2

	instrl  goto 28
	instr  goto 25


state 26
	instr : IF instrl . ELSE instrl IFEND  (4)

	ELSE  shift 29
	.  error


state 27
	main : instrl EOL .  (1)

	.  reduce 1


state 28
	instrl : instr instrl .  (3)

	.  reduce 3


state 29
	instr : IF instrl ELSE . instrl IFEND  (4)

	INT  shift 3
	LET  shift 4
	ACCESS  shift 5
	ENDLET  shift 6
	ADD  shift 7
	MINUS  shift 8
	MULT  shift 9
	DIV  shift 10
	MOD  shift 11
	UMINUS  shift 12
	PRINT  shift 13
	AND  shift 14
	OR  shift 15
	EQUAL  shift 16
	NEQUAL  shift 17
	SUP  shift 18
	SUPEQ  shift 19
	INFEQ  shift 20
	INF  shift 21
	IF  shift 22
	.  error

	instrl  goto 30
	instr  goto 25


state 30
	instr : IF instrl ELSE instrl . IFEND  (4)

	IFEND  shift 31
	.  error


state 31
	instr : IF instrl ELSE instrl IFEND .  (4)

	.  reduce 4


26 terminals, 5 nonterminals
25 grammar rules, 32 states
