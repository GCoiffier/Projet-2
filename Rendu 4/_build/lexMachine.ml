# 1 "lexMachine.mll"
 
  open ParsMachine;;        (* le type "token" est d�fini dans parser.mli *)
(* ce n'est pas � vous d'�crire ce fichier, il est engendr� automatiquement *)
exception Eof;;

# 8 "lexMachine.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\001\000\001\000\002\000\001\000\003\000\002\000\005\000\
    \002\000\012\000\011\000\012\000\015\000\002\000\022\000\030\000\
    \061\000\255\255\029\000\031\000\032\000\253\255\242\255\033\000\
    \020\000\021\000\000\000\054\000\136\000\233\255\037\000\030\000\
    \067\000\061\000\064\000\252\255\064\000\251\255\249\255\064\000\
    \250\255\105\000\101\000\095\000\098\000\248\255\102\000\110\000\
    \106\000\101\000\247\255\246\255\116\000\118\000\110\000\121\000\
    \244\255\121\000\110\000\238\255\124\000\108\000\111\000\126\000\
    \243\255\131\000\121\000\240\255\122\000\130\000\116\000\232\255\
    \241\255\146\000\143\000\164\000\154\000\239\255\152\000\190\000\
    \179\000\236\255\177\000\222\000\194\000\208\000\034\001\234\255\
    \197\000\001\000\092\001\174\001\228\255\187\000\199\000\183\000\
    \231\255\184\000\184\000\188\000\193\000\230\255\196\000\223\000\
    \229\255\227\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\010\000\255\255\255\255\
    \255\255\018\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\020\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\017\000\017\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\090\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\000\000\001\000\105\000\000\000\000\000\000\000\
    \000\000\015\000\102\000\002\000\013\000\009\000\004\000\097\000\
    \082\000\010\000\073\000\039\000\005\000\014\000\007\000\008\000\
    \011\000\053\000\003\000\006\000\072\000\012\000\093\000\078\000\
    \062\000\052\000\060\000\046\000\041\000\061\000\047\000\032\000\
    \023\000\018\000\020\000\022\000\021\000\030\000\024\000\025\000\
    \026\000\038\000\036\000\031\000\019\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\016\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\033\000\034\000\035\000\037\000\028\000\040\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\029\000\042\000\043\000\044\000\045\000\051\000\048\000\
    \049\000\050\000\057\000\054\000\055\000\056\000\058\000\059\000\
    \068\000\065\000\063\000\064\000\066\000\067\000\069\000\070\000\
    \071\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\074\000\075\000\076\000\077\000\028\000\
    \079\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\080\000\081\000\083\000\085\000\088\000\
    \089\000\094\000\095\000\096\000\098\000\099\000\100\000\101\000\
    \103\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\104\000\000\000\000\000\000\000\086\000\
    \084\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\087\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\000\000\000\000\000\000\
    \000\000\086\000\000\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\000\000\
    \000\000\000\000\000\000\091\000\000\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\092\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\000\000\000\000\000\000\000\000\091\000\000\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \026\000\089\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\001\000\255\255\255\255\255\255\
    \255\255\000\000\002\000\000\000\000\000\000\000\000\000\003\000\
    \005\000\000\000\007\000\013\000\000\000\000\000\000\000\000\000\
    \000\000\010\000\000\000\000\000\008\000\000\000\004\000\006\000\
    \009\000\010\000\009\000\011\000\012\000\009\000\011\000\014\000\
    \018\000\015\000\015\000\019\000\020\000\014\000\023\000\024\000\
    \025\000\030\000\031\000\014\000\015\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\016\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\032\000\033\000\034\000\036\000\027\000\039\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\028\000\041\000\042\000\043\000\044\000\046\000\047\000\
    \048\000\049\000\052\000\053\000\054\000\055\000\057\000\058\000\
    \060\000\061\000\062\000\063\000\065\000\066\000\068\000\069\000\
    \070\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\073\000\074\000\075\000\076\000\028\000\
    \078\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\079\000\080\000\082\000\083\000\084\000\
    \088\000\093\000\094\000\095\000\097\000\098\000\099\000\100\000\
    \102\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\103\000\255\255\255\255\255\255\085\000\
    \083\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\085\000\085\000\085\000\085\000\085\000\
    \085\000\085\000\085\000\086\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\255\255\255\255\255\255\
    \255\255\086\000\255\255\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\255\255\
    \255\255\255\255\255\255\090\000\255\255\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\091\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\255\255\255\255\255\255\255\255\091\000\255\255\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 8 "lexMachine.mll"
                     ( token lexbuf )
# 250 "lexMachine.ml"

  | 1 ->
let
# 10 "lexMachine.mll"
                 s
# 256 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 10 "lexMachine.mll"
                         ( INT (int_of_string s) )
# 260 "lexMachine.ml"

  | 2 ->
# 11 "lexMachine.mll"
                ( ADD )
# 265 "lexMachine.ml"

  | 3 ->
# 12 "lexMachine.mll"
              ( MINUS )
# 270 "lexMachine.ml"

  | 4 ->
# 13 "lexMachine.mll"
             ( MULT )
# 275 "lexMachine.ml"

  | 5 ->
# 14 "lexMachine.mll"
                ( DIV )
# 280 "lexMachine.ml"

  | 6 ->
# 15 "lexMachine.mll"
                ( MOD )
# 285 "lexMachine.ml"

  | 7 ->
# 16 "lexMachine.mll"
               ( UMINUS )
# 290 "lexMachine.ml"

  | 8 ->
# 17 "lexMachine.mll"
              ( PRINT )
# 295 "lexMachine.ml"

  | 9 ->
# 18 "lexMachine.mll"
             ( POP )
# 300 "lexMachine.ml"

  | 10 ->
# 20 "lexMachine.mll"
            ( IF )
# 305 "lexMachine.ml"

  | 11 ->
# 21 "lexMachine.mll"
              ( IFEND )
# 310 "lexMachine.ml"

  | 12 ->
# 22 "lexMachine.mll"
             ( ELSE )
# 315 "lexMachine.ml"

  | 13 ->
# 24 "lexMachine.mll"
                ( AND )
# 320 "lexMachine.ml"

  | 14 ->
# 25 "lexMachine.mll"
            ( OR )
# 325 "lexMachine.ml"

  | 15 ->
# 26 "lexMachine.mll"
              ( EQUAL )
# 330 "lexMachine.ml"

  | 16 ->
# 27 "lexMachine.mll"
               ( NEQUAL )
# 335 "lexMachine.ml"

  | 17 ->
# 28 "lexMachine.mll"
              ( INFEQ )
# 340 "lexMachine.ml"

  | 18 ->
# 29 "lexMachine.mll"
                ( INF )
# 345 "lexMachine.ml"

  | 19 ->
# 30 "lexMachine.mll"
              ( SUPEQ )
# 350 "lexMachine.ml"

  | 20 ->
# 31 "lexMachine.mll"
                ( SUP )
# 355 "lexMachine.ml"

  | 21 ->
let
# 34 "lexMachine.mll"
                                      s
# 361 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 34 "lexMachine.mll"
                                                ( LET (s) )
# 365 "lexMachine.ml"

  | 22 ->
let
# 35 "lexMachine.mll"
                                        s
# 371 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 7) (lexbuf.Lexing.lex_curr_pos + -1) in
# 35 "lexMachine.mll"
                                                ( ACCESS (s) )
# 375 "lexMachine.ml"

  | 23 ->
# 36 "lexMachine.mll"
                                         ( ENDLET )
# 380 "lexMachine.ml"

  | 24 ->
# 38 "lexMachine.mll"
              ( FUNCT )
# 385 "lexMachine.ml"

  | 25 ->
# 39 "lexMachine.mll"
               ( RETURN )
# 390 "lexMachine.ml"

  | 26 ->
# 40 "lexMachine.mll"
             ( CALL )
# 395 "lexMachine.ml"

  | 27 ->
let
# 41 "lexMachine.mll"
                                         s
# 401 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 7) (lexbuf.Lexing.lex_curr_pos + -1) in
# 41 "lexMachine.mll"
                                                ( LETREC (s) )
# 405 "lexMachine.ml"

  | 28 ->
# 42 "lexMachine.mll"
               ( EOL )
# 410 "lexMachine.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

