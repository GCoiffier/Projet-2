# 1 "lexMachine.mll"
 
  open ParsMachine;;        (* le type "token" est d�fini dans parser.mli *)
(* ce n'est pas � vous d'�crire ce fichier, il est engendr� automatiquement *)
exception Eof;;

# 8 "lexMachine.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\001\000\001\000\001\000\002\000\000\000\011\000\018\000\
    \002\000\004\000\001\000\018\000\026\000\057\000\255\255\254\255\
    \000\000\004\000\007\000\002\000\253\255\003\000\243\255\021\000\
    \012\000\015\000\000\000\052\000\134\000\004\000\234\255\031\000\
    \024\000\023\000\017\000\032\000\005\000\252\255\059\000\007\000\
    \251\255\085\000\249\255\059\000\087\000\250\255\075\000\098\000\
    \092\000\095\000\120\000\248\255\107\000\103\000\098\000\124\000\
    \247\255\114\000\126\000\108\000\246\255\119\000\129\000\245\255\
    \198\000\238\255\108\000\131\000\239\255\123\000\107\000\110\000\
    \125\000\137\000\244\255\132\000\122\000\166\000\241\255\150\000\
    \158\000\144\000\171\000\233\255\199\000\242\255\178\000\175\000\
    \196\000\186\000\204\000\240\255\184\000\206\000\236\255\185\000\
    \209\000\237\255\185\000\001\000\211\000\037\001\211\000\235\255\
    \232\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\014\000\014\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\000\000\001\000\104\000\020\000\022\000\030\000\
    \037\000\012\000\040\000\023\000\010\000\006\000\098\000\086\000\
    \021\000\007\000\043\000\019\000\002\000\011\000\004\000\005\000\
    \008\000\046\000\084\000\003\000\052\000\009\000\092\000\071\000\
    \058\000\069\000\024\000\033\000\070\000\016\000\018\000\025\000\
    \057\000\031\000\026\000\041\000\038\000\034\000\035\000\032\000\
    \017\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\036\000\015\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\039\000\
    \042\000\044\000\045\000\028\000\047\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\029\000\
    \048\000\049\000\050\000\051\000\053\000\054\000\055\000\056\000\
    \064\000\060\000\061\000\062\000\063\000\067\000\068\000\079\000\
    \075\000\072\000\073\000\059\000\074\000\076\000\077\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\078\000\080\000\081\000\082\000\028\000\083\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\065\000\085\000\087\000\088\000\089\000\090\000\091\000\
    \093\000\094\000\096\000\066\000\097\000\099\000\103\000\000\000\
    \000\000\000\000\000\000\095\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\000\000\000\000\
    \000\000\000\000\101\000\000\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\102\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \000\000\000\000\000\000\000\000\101\000\000\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \026\000\099\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\001\000\019\000\021\000\029\000\
    \036\000\000\000\039\000\016\000\000\000\000\000\002\000\004\000\
    \017\000\000\000\010\000\018\000\000\000\000\000\000\000\000\000\
    \000\000\009\000\005\000\000\000\008\000\000\000\003\000\006\000\
    \007\000\006\000\023\000\011\000\006\000\012\000\012\000\024\000\
    \007\000\011\000\025\000\031\000\032\000\033\000\034\000\011\000\
    \012\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\035\000\013\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\038\000\
    \041\000\043\000\044\000\027\000\046\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\028\000\
    \047\000\048\000\049\000\050\000\052\000\053\000\054\000\055\000\
    \057\000\058\000\059\000\061\000\062\000\066\000\067\000\069\000\
    \070\000\071\000\072\000\058\000\073\000\075\000\076\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\077\000\079\000\080\000\081\000\028\000\082\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\064\000\084\000\086\000\087\000\088\000\089\000\090\000\
    \092\000\093\000\095\000\064\000\096\000\098\000\102\000\255\255\
    \255\255\255\255\255\255\093\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\255\255\255\255\
    \255\255\255\255\100\000\255\255\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\101\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \255\255\255\255\255\255\255\255\101\000\255\255\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\101\000\101\000\101\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 8 "lexMachine.mll"
                     ( token lexbuf )
# 216 "lexMachine.ml"

  | 1 ->
let
# 10 "lexMachine.mll"
                 s
# 222 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 10 "lexMachine.mll"
                         ( INT (int_of_string s) )
# 226 "lexMachine.ml"

  | 2 ->
# 11 "lexMachine.mll"
             ( ADD )
# 231 "lexMachine.ml"

  | 3 ->
# 12 "lexMachine.mll"
               ( MINUS )
# 236 "lexMachine.ml"

  | 4 ->
# 13 "lexMachine.mll"
              ( MULT )
# 241 "lexMachine.ml"

  | 5 ->
# 14 "lexMachine.mll"
             ( DIV )
# 246 "lexMachine.ml"

  | 6 ->
# 15 "lexMachine.mll"
             ( MOD )
# 251 "lexMachine.ml"

  | 7 ->
# 16 "lexMachine.mll"
                ( UMINUS )
# 256 "lexMachine.ml"

  | 8 ->
# 17 "lexMachine.mll"
               ( PRINT )
# 261 "lexMachine.ml"

  | 9 ->
# 19 "lexMachine.mll"
             ( IF )
# 266 "lexMachine.ml"

  | 10 ->
# 20 "lexMachine.mll"
               ( IFEND )
# 271 "lexMachine.ml"

  | 11 ->
# 21 "lexMachine.mll"
              ( ELSE )
# 276 "lexMachine.ml"

  | 12 ->
# 23 "lexMachine.mll"
             ( AND )
# 281 "lexMachine.ml"

  | 13 ->
# 24 "lexMachine.mll"
             ( OR )
# 286 "lexMachine.ml"

  | 14 ->
# 25 "lexMachine.mll"
               ( EQUAL )
# 291 "lexMachine.ml"

  | 15 ->
# 26 "lexMachine.mll"
                ( NEQUAL )
# 296 "lexMachine.ml"

  | 16 ->
# 27 "lexMachine.mll"
               ( INFEQ )
# 301 "lexMachine.ml"

  | 17 ->
# 28 "lexMachine.mll"
             ( INF )
# 306 "lexMachine.ml"

  | 18 ->
# 29 "lexMachine.mll"
               ( SUPEQ )
# 311 "lexMachine.ml"

  | 19 ->
# 30 "lexMachine.mll"
             ( SUP )
# 316 "lexMachine.ml"

  | 20 ->
let
# 33 "lexMachine.mll"
                                      s
# 322 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -2) in
# 33 "lexMachine.mll"
                                               ( LET (s) )
# 326 "lexMachine.ml"

  | 21 ->
let
# 34 "lexMachine.mll"
                                        s
# 332 "lexMachine.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 7) (lexbuf.Lexing.lex_curr_pos + -2) in
# 34 "lexMachine.mll"
                                                 ( ACCESS (s) )
# 336 "lexMachine.ml"

  | 22 ->
# 35 "lexMachine.mll"
               ( ENDLET )
# 341 "lexMachine.ml"

  | 23 ->
# 37 "lexMachine.mll"
           ( EOL )
# 346 "lexMachine.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

