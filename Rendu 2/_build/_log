### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules main.ml > main.ml.depends # cached
# Target: argv.ml.depends, tags: { extension:ml, file:argv.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules argv.ml > argv.ml.depends # cached
# Target: fouine.ml.depends, tags: { extension:ml, file:fouine.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules fouine.ml > fouine.ml.depends
# Target: data_structures.ml.depends, tags: { extension:ml, file:data_structures.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules data_structures.ml > data_structures.ml.depends # cached
# Target: data_structures.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:data_structures.cmo, file:data_structures.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o data_structures.cmo data_structures.ml # cached
# Target: expr_arith.ml.depends, tags: { extension:ml, file:expr_arith.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules expr_arith.ml > expr_arith.ml.depends # cached
# Target: expr_arith.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:expr_arith.cmo, file:expr_arith.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o expr_arith.cmo expr_arith.ml # cached
# Target: expr_bool.ml.depends, tags: { extension:ml, file:expr_bool.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules expr_bool.ml > expr_bool.ml.depends # cached
# Target: expr_bool.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:expr_bool.cmo, file:expr_bool.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o expr_bool.cmo expr_bool.ml # cached
# Target: fouine.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:fouine.cmo, file:fouine.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o fouine.cmo fouine.ml
+ /usr/bin/ocamlc -c -o fouine.cmo fouine.ml
File "fouine.ml", line 23, characters 41-43:
Error: This expression has type Expr_arith.arithexpr
       but an expression was expected of type programme
Command exited with code 2.
# Compilation unsuccessful.
