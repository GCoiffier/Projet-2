   0  $accept : %entry% $end

   1  main : instr EOL

   2  instr : IF bexpr THEN instr ELSE instr
   3        | PRINT aexpr
   4        | LET VARIABLE EGALE aexpr IN instr
   5        | LPAREN instr RPAREN
   6        | instr EINSTR instr
   7        | aexpr

   8  aexpr : LPAREN aexpr RPAREN
   9        | aexpr ADD aexpr
  10        | aexpr MINUS aexpr
  11        | aexpr MULT aexpr
  12        | aexpr DIV aexpr
  13        | aexpr MOD aexpr
  14        | VARIABLE
  15        | CONST

  16  bexpr : bexpr AND bexpr
  17        | bexpr OR bexpr
  18        | NOT bexpr
  19        | aexpr EGALE aexpr
  20        | aexpr NEG aexpr
  21        | aexpr SUPS aexpr
  22        | aexpr INFS aexpr
  23        | aexpr SUPE aexpr
  24        | aexpr INFE aexpr

  25  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (25)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	main  goto 9
	instr  goto 10
	aexpr  goto 11


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	aexpr : CONST .  (15)

	.  reduce 15


state 4
	aexpr : VARIABLE .  (14)

	.  reduce 14


state 5
	instr : IF . bexpr THEN instr ELSE instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	NOT  shift 12
	LPAREN  shift 13
	.  error

	bexpr  goto 14
	aexpr  goto 15


state 6
	instr : PRINT . aexpr  (3)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 16


state 7
	instr : LET . VARIABLE EGALE aexpr IN instr  (4)

	VARIABLE  shift 17
	.  error


state 8
	instr : LPAREN . instr RPAREN  (5)
	aexpr : LPAREN . aexpr RPAREN  (8)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 18
	aexpr  goto 19


state 9
	%entry% : '\001' main .  (25)

	.  reduce 25


state 10
	main : instr . EOL  (1)
	instr : instr . EINSTR instr  (6)

	EOL  shift 20
	EINSTR  shift 21
	.  error


state 11
	instr : aexpr .  (7)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	ELSE  reduce 7
	RPAREN  reduce 7
	EOL  reduce 7
	EINSTR  reduce 7


state 12
	bexpr : NOT . bexpr  (18)

	CONST  shift 3
	VARIABLE  shift 4
	NOT  shift 12
	LPAREN  shift 13
	.  error

	bexpr  goto 27
	aexpr  goto 15


state 13
	aexpr : LPAREN . aexpr RPAREN  (8)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 28


state 14
	instr : IF bexpr . THEN instr ELSE instr  (2)
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr . OR bexpr  (17)

	AND  shift 29
	OR  shift 30
	THEN  shift 31
	.  error


state 15
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr . EGALE aexpr  (19)
	bexpr : aexpr . NEG aexpr  (20)
	bexpr : aexpr . SUPS aexpr  (21)
	bexpr : aexpr . INFS aexpr  (22)
	bexpr : aexpr . SUPE aexpr  (23)
	bexpr : aexpr . INFE aexpr  (24)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	EGALE  shift 32
	NEG  shift 33
	SUPS  shift 34
	INFS  shift 35
	SUPE  shift 36
	INFE  shift 37
	.  error


state 16
	instr : PRINT aexpr .  (3)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	ELSE  reduce 3
	RPAREN  reduce 3
	EOL  reduce 3
	EINSTR  reduce 3


state 17
	instr : LET VARIABLE . EGALE aexpr IN instr  (4)

	EGALE  shift 38
	.  error


state 18
	instr : LPAREN instr . RPAREN  (5)
	instr : instr . EINSTR instr  (6)

	RPAREN  shift 39
	EINSTR  shift 21
	.  error


19: shift/reduce conflict (shift 40, reduce 7) on RPAREN
state 19
	instr : aexpr .  (7)
	aexpr : LPAREN aexpr . RPAREN  (8)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	RPAREN  shift 40
	EINSTR  reduce 7


state 20
	main : instr EOL .  (1)

	.  reduce 1


state 21
	instr : instr EINSTR . instr  (6)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 41
	aexpr  goto 11


state 22
	aexpr : aexpr ADD . aexpr  (9)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 42


state 23
	aexpr : aexpr MINUS . aexpr  (10)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 43


state 24
	aexpr : aexpr MULT . aexpr  (11)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 44


state 25
	aexpr : aexpr DIV . aexpr  (12)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 45


state 26
	aexpr : aexpr MOD . aexpr  (13)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 46


state 27
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr . OR bexpr  (17)
	bexpr : NOT bexpr .  (18)

	.  reduce 18


state 28
	aexpr : LPAREN aexpr . RPAREN  (8)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	RPAREN  shift 40
	.  error


state 29
	bexpr : bexpr AND . bexpr  (16)

	CONST  shift 3
	VARIABLE  shift 4
	NOT  shift 12
	LPAREN  shift 13
	.  error

	bexpr  goto 47
	aexpr  goto 15


state 30
	bexpr : bexpr OR . bexpr  (17)

	CONST  shift 3
	VARIABLE  shift 4
	NOT  shift 12
	LPAREN  shift 13
	.  error

	bexpr  goto 48
	aexpr  goto 15


state 31
	instr : IF bexpr THEN . instr ELSE instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 49
	aexpr  goto 11


state 32
	bexpr : aexpr EGALE . aexpr  (19)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 50


state 33
	bexpr : aexpr NEG . aexpr  (20)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 51


state 34
	bexpr : aexpr SUPS . aexpr  (21)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 52


state 35
	bexpr : aexpr INFS . aexpr  (22)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 53


state 36
	bexpr : aexpr SUPE . aexpr  (23)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 54


state 37
	bexpr : aexpr INFE . aexpr  (24)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 55


state 38
	instr : LET VARIABLE EGALE . aexpr IN instr  (4)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 13
	.  error

	aexpr  goto 56


state 39
	instr : LPAREN instr RPAREN .  (5)

	.  reduce 5


state 40
	aexpr : LPAREN aexpr RPAREN .  (8)

	.  reduce 8


41: shift/reduce conflict (shift 21, reduce 6) on EINSTR
state 41
	instr : instr . EINSTR instr  (6)
	instr : instr EINSTR instr .  (6)

	EINSTR  shift 21
	ELSE  reduce 6
	RPAREN  reduce 6
	EOL  reduce 6


state 42
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr ADD aexpr .  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	ADD  reduce 9
	MINUS  reduce 9
	AND  reduce 9
	OR  reduce 9
	EGALE  reduce 9
	NEG  reduce 9
	SUPS  reduce 9
	INFS  reduce 9
	SUPE  reduce 9
	INFE  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	IN  reduce 9
	RPAREN  reduce 9
	EOL  reduce 9
	EINSTR  reduce 9


state 43
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr MINUS aexpr .  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	ADD  reduce 10
	MINUS  reduce 10
	AND  reduce 10
	OR  reduce 10
	EGALE  reduce 10
	NEG  reduce 10
	SUPS  reduce 10
	INFS  reduce 10
	SUPE  reduce 10
	INFE  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	IN  reduce 10
	RPAREN  reduce 10
	EOL  reduce 10
	EINSTR  reduce 10


state 44
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr MULT aexpr .  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	.  reduce 11


state 45
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr DIV aexpr .  (12)
	aexpr : aexpr . MOD aexpr  (13)

	.  reduce 12


state 46
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	aexpr : aexpr MOD aexpr .  (13)

	.  reduce 13


state 47
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr AND bexpr .  (16)
	bexpr : bexpr . OR bexpr  (17)

	.  reduce 16


state 48
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr . OR bexpr  (17)
	bexpr : bexpr OR bexpr .  (17)

	.  reduce 17


state 49
	instr : IF bexpr THEN instr . ELSE instr  (2)
	instr : instr . EINSTR instr  (6)

	ELSE  shift 57
	EINSTR  shift 21
	.  error


state 50
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr EGALE aexpr .  (19)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 19
	OR  reduce 19
	THEN  reduce 19


state 51
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr NEG aexpr .  (20)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 20
	OR  reduce 20
	THEN  reduce 20


state 52
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr SUPS aexpr .  (21)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 21
	OR  reduce 21
	THEN  reduce 21


state 53
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr INFS aexpr .  (22)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 22
	OR  reduce 22
	THEN  reduce 22


state 54
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr SUPE aexpr .  (23)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 23
	OR  reduce 23
	THEN  reduce 23


state 55
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr INFE aexpr .  (24)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	AND  reduce 24
	OR  reduce 24
	THEN  reduce 24


state 56
	instr : LET VARIABLE EGALE aexpr . IN instr  (4)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 22
	MINUS  shift 23
	MULT  shift 24
	DIV  shift 25
	MOD  shift 26
	IN  shift 58
	.  error


state 57
	instr : IF bexpr THEN instr ELSE . instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 59
	aexpr  goto 11


state 58
	instr : LET VARIABLE EGALE aexpr IN . instr  (4)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 60
	aexpr  goto 11


59: shift/reduce conflict (shift 21, reduce 2) on EINSTR
state 59
	instr : IF bexpr THEN instr ELSE instr .  (2)
	instr : instr . EINSTR instr  (6)

	EINSTR  shift 21
	ELSE  reduce 2
	RPAREN  reduce 2
	EOL  reduce 2


60: shift/reduce conflict (shift 21, reduce 4) on EINSTR
state 60
	instr : LET VARIABLE EGALE aexpr IN instr .  (4)
	instr : instr . EINSTR instr  (6)

	EINSTR  shift 21
	ELSE  reduce 4
	RPAREN  reduce 4
	EOL  reduce 4


State 19 contains 1 shift/reduce conflict.
State 41 contains 1 shift/reduce conflict.
State 59 contains 1 shift/reduce conflict.
State 60 contains 1 shift/reduce conflict.


31 terminals, 6 nonterminals
26 grammar rules, 61 states
