   0  $accept : %entry% $end

   1  main : instr EOL

   2  instr : IF bexpr THEN instr ELSE instr
   3        | PRINT aexpr
   4        | LET VARIABLE EGALE aexpr IN instr
   5        | LPAREN instr RPAREN
   6        | instr EINSTR instr
   7        | aexpr

   8  aexpr : LPAREN aexpr RPAREN
   9        | aexpr ADD aexpr
  10        | aexpr MINUS aexpr
  11        | aexpr MULT aexpr
  12        | aexpr DIV aexpr
  13        | aexpr MOD aexpr
  14        | VARIABLE
  15        | CONST

  16  bexpr : bexpr AND bexpr
  17        | bexpr OR bexpr
  18        | aexpr EGALE aexpr
  19        | aexpr NEG aexpr
  20        | aexpr SUPS aexpr
  21        | aexpr INFS aexpr
  22        | aexpr SUPE aexpr
  23        | aexpr INFE aexpr

  24  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (24)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	main  goto 9
	instr  goto 10
	aexpr  goto 11


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	aexpr : CONST .  (15)

	.  reduce 15


state 4
	aexpr : VARIABLE .  (14)

	.  reduce 14


state 5
	instr : IF . bexpr THEN instr ELSE instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	bexpr  goto 13
	aexpr  goto 14


state 6
	instr : PRINT . aexpr  (3)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 15


state 7
	instr : LET . VARIABLE EGALE aexpr IN instr  (4)

	VARIABLE  shift 16
	.  error


state 8
	instr : LPAREN . instr RPAREN  (5)
	aexpr : LPAREN . aexpr RPAREN  (8)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 17
	aexpr  goto 18


state 9
	%entry% : '\001' main .  (24)

	.  reduce 24


state 10
	main : instr . EOL  (1)
	instr : instr . EINSTR instr  (6)

	EOL  shift 19
	EINSTR  shift 20
	.  error


state 11
	instr : aexpr .  (7)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	ELSE  reduce 7
	RPAREN  reduce 7
	EOL  reduce 7
	EINSTR  reduce 7


state 12
	aexpr : LPAREN . aexpr RPAREN  (8)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 26


state 13
	instr : IF bexpr . THEN instr ELSE instr  (2)
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr . OR bexpr  (17)

	AND  shift 27
	OR  shift 28
	THEN  shift 29
	.  error


state 14
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr . EGALE aexpr  (18)
	bexpr : aexpr . NEG aexpr  (19)
	bexpr : aexpr . SUPS aexpr  (20)
	bexpr : aexpr . INFS aexpr  (21)
	bexpr : aexpr . SUPE aexpr  (22)
	bexpr : aexpr . INFE aexpr  (23)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	EGALE  shift 30
	NEG  shift 31
	SUPS  shift 32
	INFS  shift 33
	SUPE  shift 34
	INFE  shift 35
	.  error


state 15
	instr : PRINT aexpr .  (3)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	ELSE  reduce 3
	RPAREN  reduce 3
	EOL  reduce 3
	EINSTR  reduce 3


state 16
	instr : LET VARIABLE . EGALE aexpr IN instr  (4)

	EGALE  shift 36
	.  error


state 17
	instr : LPAREN instr . RPAREN  (5)
	instr : instr . EINSTR instr  (6)

	RPAREN  shift 37
	EINSTR  shift 20
	.  error


18: shift/reduce conflict (shift 38, reduce 7) on RPAREN
state 18
	instr : aexpr .  (7)
	aexpr : LPAREN aexpr . RPAREN  (8)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	RPAREN  shift 38
	EINSTR  reduce 7


state 19
	main : instr EOL .  (1)

	.  reduce 1


state 20
	instr : instr EINSTR . instr  (6)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 39
	aexpr  goto 11


state 21
	aexpr : aexpr ADD . aexpr  (9)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 40


state 22
	aexpr : aexpr MINUS . aexpr  (10)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 41


state 23
	aexpr : aexpr MULT . aexpr  (11)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 42


state 24
	aexpr : aexpr DIV . aexpr  (12)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 43


state 25
	aexpr : aexpr MOD . aexpr  (13)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 44


state 26
	aexpr : LPAREN aexpr . RPAREN  (8)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	RPAREN  shift 38
	.  error


state 27
	bexpr : bexpr AND . bexpr  (16)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	bexpr  goto 45
	aexpr  goto 14


state 28
	bexpr : bexpr OR . bexpr  (17)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	bexpr  goto 46
	aexpr  goto 14


state 29
	instr : IF bexpr THEN . instr ELSE instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 47
	aexpr  goto 11


state 30
	bexpr : aexpr EGALE . aexpr  (18)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 48


state 31
	bexpr : aexpr NEG . aexpr  (19)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 49


state 32
	bexpr : aexpr SUPS . aexpr  (20)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 50


state 33
	bexpr : aexpr INFS . aexpr  (21)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 51


state 34
	bexpr : aexpr SUPE . aexpr  (22)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 52


state 35
	bexpr : aexpr INFE . aexpr  (23)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 53


state 36
	instr : LET VARIABLE EGALE . aexpr IN instr  (4)

	CONST  shift 3
	VARIABLE  shift 4
	LPAREN  shift 12
	.  error

	aexpr  goto 54


state 37
	instr : LPAREN instr RPAREN .  (5)

	.  reduce 5


state 38
	aexpr : LPAREN aexpr RPAREN .  (8)

	.  reduce 8


39: shift/reduce conflict (shift 20, reduce 6) on EINSTR
state 39
	instr : instr . EINSTR instr  (6)
	instr : instr EINSTR instr .  (6)

	EINSTR  shift 20
	ELSE  reduce 6
	RPAREN  reduce 6
	EOL  reduce 6


40: shift/reduce conflict (shift 21, reduce 9) on ADD
40: shift/reduce conflict (shift 22, reduce 9) on MINUS
40: shift/reduce conflict (shift 23, reduce 9) on MULT
40: shift/reduce conflict (shift 24, reduce 9) on DIV
40: shift/reduce conflict (shift 25, reduce 9) on MOD
state 40
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr ADD aexpr .  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 9
	OR  reduce 9
	EGALE  reduce 9
	NEG  reduce 9
	SUPS  reduce 9
	INFS  reduce 9
	SUPE  reduce 9
	INFE  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	IN  reduce 9
	RPAREN  reduce 9
	EOL  reduce 9
	EINSTR  reduce 9


41: shift/reduce conflict (shift 21, reduce 10) on ADD
41: shift/reduce conflict (shift 22, reduce 10) on MINUS
41: shift/reduce conflict (shift 23, reduce 10) on MULT
41: shift/reduce conflict (shift 24, reduce 10) on DIV
41: shift/reduce conflict (shift 25, reduce 10) on MOD
state 41
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr MINUS aexpr .  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 10
	OR  reduce 10
	EGALE  reduce 10
	NEG  reduce 10
	SUPS  reduce 10
	INFS  reduce 10
	SUPE  reduce 10
	INFE  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	IN  reduce 10
	RPAREN  reduce 10
	EOL  reduce 10
	EINSTR  reduce 10


42: shift/reduce conflict (shift 21, reduce 11) on ADD
42: shift/reduce conflict (shift 22, reduce 11) on MINUS
42: shift/reduce conflict (shift 23, reduce 11) on MULT
42: shift/reduce conflict (shift 24, reduce 11) on DIV
42: shift/reduce conflict (shift 25, reduce 11) on MOD
state 42
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr MULT aexpr .  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 11
	OR  reduce 11
	EGALE  reduce 11
	NEG  reduce 11
	SUPS  reduce 11
	INFS  reduce 11
	SUPE  reduce 11
	INFE  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	IN  reduce 11
	RPAREN  reduce 11
	EOL  reduce 11
	EINSTR  reduce 11


43: shift/reduce conflict (shift 21, reduce 12) on ADD
43: shift/reduce conflict (shift 22, reduce 12) on MINUS
43: shift/reduce conflict (shift 23, reduce 12) on MULT
43: shift/reduce conflict (shift 24, reduce 12) on DIV
43: shift/reduce conflict (shift 25, reduce 12) on MOD
state 43
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr DIV aexpr .  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 12
	OR  reduce 12
	EGALE  reduce 12
	NEG  reduce 12
	SUPS  reduce 12
	INFS  reduce 12
	SUPE  reduce 12
	INFE  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	IN  reduce 12
	RPAREN  reduce 12
	EOL  reduce 12
	EINSTR  reduce 12


44: shift/reduce conflict (shift 21, reduce 13) on ADD
44: shift/reduce conflict (shift 22, reduce 13) on MINUS
44: shift/reduce conflict (shift 23, reduce 13) on MULT
44: shift/reduce conflict (shift 24, reduce 13) on DIV
44: shift/reduce conflict (shift 25, reduce 13) on MOD
state 44
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	aexpr : aexpr MOD aexpr .  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 13
	OR  reduce 13
	EGALE  reduce 13
	NEG  reduce 13
	SUPS  reduce 13
	INFS  reduce 13
	SUPE  reduce 13
	INFE  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	IN  reduce 13
	RPAREN  reduce 13
	EOL  reduce 13
	EINSTR  reduce 13


45: shift/reduce conflict (shift 27, reduce 16) on AND
45: shift/reduce conflict (shift 28, reduce 16) on OR
state 45
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr AND bexpr .  (16)
	bexpr : bexpr . OR bexpr  (17)

	AND  shift 27
	OR  shift 28
	THEN  reduce 16


46: shift/reduce conflict (shift 27, reduce 17) on AND
46: shift/reduce conflict (shift 28, reduce 17) on OR
state 46
	bexpr : bexpr . AND bexpr  (16)
	bexpr : bexpr . OR bexpr  (17)
	bexpr : bexpr OR bexpr .  (17)

	AND  shift 27
	OR  shift 28
	THEN  reduce 17


state 47
	instr : IF bexpr THEN instr . ELSE instr  (2)
	instr : instr . EINSTR instr  (6)

	ELSE  shift 55
	EINSTR  shift 20
	.  error


state 48
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr EGALE aexpr .  (18)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 18
	OR  reduce 18
	THEN  reduce 18


state 49
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr NEG aexpr .  (19)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 19
	OR  reduce 19
	THEN  reduce 19


state 50
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr SUPS aexpr .  (20)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 20
	OR  reduce 20
	THEN  reduce 20


state 51
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr INFS aexpr .  (21)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 21
	OR  reduce 21
	THEN  reduce 21


state 52
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr SUPE aexpr .  (22)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 22
	OR  reduce 22
	THEN  reduce 22


state 53
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)
	bexpr : aexpr INFE aexpr .  (23)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	AND  reduce 23
	OR  reduce 23
	THEN  reduce 23


state 54
	instr : LET VARIABLE EGALE aexpr . IN instr  (4)
	aexpr : aexpr . ADD aexpr  (9)
	aexpr : aexpr . MINUS aexpr  (10)
	aexpr : aexpr . MULT aexpr  (11)
	aexpr : aexpr . DIV aexpr  (12)
	aexpr : aexpr . MOD aexpr  (13)

	ADD  shift 21
	MINUS  shift 22
	MULT  shift 23
	DIV  shift 24
	MOD  shift 25
	IN  shift 56
	.  error


state 55
	instr : IF bexpr THEN instr ELSE . instr  (2)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 57
	aexpr  goto 11


state 56
	instr : LET VARIABLE EGALE aexpr IN . instr  (4)

	CONST  shift 3
	VARIABLE  shift 4
	IF  shift 5
	PRINT  shift 6
	LET  shift 7
	LPAREN  shift 8
	.  error

	instr  goto 58
	aexpr  goto 11


57: shift/reduce conflict (shift 20, reduce 2) on EINSTR
state 57
	instr : IF bexpr THEN instr ELSE instr .  (2)
	instr : instr . EINSTR instr  (6)

	EINSTR  shift 20
	ELSE  reduce 2
	RPAREN  reduce 2
	EOL  reduce 2


58: shift/reduce conflict (shift 20, reduce 4) on EINSTR
state 58
	instr : LET VARIABLE EGALE aexpr IN instr .  (4)
	instr : instr . EINSTR instr  (6)

	EINSTR  shift 20
	ELSE  reduce 4
	RPAREN  reduce 4
	EOL  reduce 4


State 18 contains 1 shift/reduce conflict.
State 39 contains 1 shift/reduce conflict.
State 40 contains 5 shift/reduce conflicts.
State 41 contains 5 shift/reduce conflicts.
State 42 contains 5 shift/reduce conflicts.
State 43 contains 5 shift/reduce conflicts.
State 44 contains 5 shift/reduce conflicts.
State 45 contains 2 shift/reduce conflicts.
State 46 contains 2 shift/reduce conflicts.
State 57 contains 1 shift/reduce conflict.
State 58 contains 1 shift/reduce conflict.


31 terminals, 6 nonterminals
25 grammar rules, 59 states
